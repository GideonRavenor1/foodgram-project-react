version: '3'
services:

  frontend:
    image: ${DOCKER_USERNAME}/yandex-foodgram-frontend:${IMAGE_TAG}
    container_name: yandex-foodgram-frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8080:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../docs:/usr/share/nginx/html/api/docs/
    depends_on:
      - backend

  backend:
    image: ${DOCKER_USERNAME}/yandex-foodgram-backend:${IMAGE_TAG}
    container_name: yandex-foodgram-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../data:/data
      - ../backend:/app
    command: bash -c "cd /app && python manage.py migrate --noinput && python manage.py collectstatic --noinput
      && gunicorn --bind 0.0.0.0:8000 --workers 3 config.wsgi:application"
    depends_on:
      - postgresql_db
    expose:
      - '8000'
    env_file:
      - .env

  celery_worker:
    container_name: celery_worker
    restart: always
    image: ${DOCKER_USERNAME}/yandex-foodgram-backend:${IMAGE_TAG}
    command: python -m celery -A config.celery_config worker -l INFO
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../data:/data
      - ../backend:/app
    depends_on:
      - backend
      - redis
    env_file:
      - .env

  celery-beat:
    image: ${DOCKER_USERNAME}/yandex-foodgram-backend:${IMAGE_TAG}
    restart: always
    container_name: drf_celery_beat
    command: python -m celery -A celery -A config.celery_config beat -l INFO
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../data:/data
      - ../backend:/app
    depends_on:
      - backend
      - redis
    env_file:
      - .env

  flower:
    image: ${DOCKER_USERNAME}/yandex-foodgram-backend:${IMAGE_TAG}
    container_name: flower
    restart: always
    command: python -m celery -A config.celery_config.app --broker=${CELERY_BROKER_URL} flower --url_prefix=api/flower
    expose:
      - '5555'
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - backend
      - redis
      - celery-beat

  postgresql_db:
    restart: always
    container_name: drf_db
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - foodgram_data:/var/lib/postgresql/data
    expose:
      - '5432'

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    expose:
      - '5050'

  redis:
    image: redis
    container_name: drf_redis
    restart: always
    expose:
      - '6379'
    depends_on:
      - backend

volumes:
  foodgram_data:
  static_volume:
  media_volume: